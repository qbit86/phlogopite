<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
namespace Phlogopite.Extensions
{
    public static partial class WriterExtensions
    {
<#
const int startPropertyCount = 1;
const int maxPropertyCount = 4;

for (int propertyCount = startPropertyCount; propertyCount <= maxPropertyCount; ++propertyCount)
{
    ClearIndent();
    if (propertyCount != startPropertyCount)
        WriteLine(string.Empty);

    PushIndent("        ");
    WriteLine("public static void Write<TWriter>(this TWriter writer, Level level, string text,");
    PushIndent("    ");
    for (int propertyIndex = 0; propertyIndex != propertyCount; ++propertyIndex)
    {
        if (propertyIndex != 0)
            Write(", ");

        Write("in NamedProperty p" + propertyIndex);
    }

    WriteLine(")");
    ClearIndent();
#>
            where TWriter : IWriter<NamedProperty>
        {
            if (!writer.IsEnabled(level))
                return;

<#
    PushIndent("            ");
    Write("WriteUnchecked(writer, level, text, ");
    for (int propertyIndex = 0; propertyIndex != propertyCount; ++propertyIndex)
    {
        if (propertyIndex != 0)
            Write(", ");

        Write("p" + propertyIndex);
    }

    WriteLine(");");
    ClearIndent();
#>
        }
<#
}
#>
    }
}
